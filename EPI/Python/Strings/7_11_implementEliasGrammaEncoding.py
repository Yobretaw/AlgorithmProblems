import sys
import os
import re
import math

"""
    ============================================================================================
    The Elias gamma code is used to encode positive integers. Specifically, the Elias gamma code 
    of a positive integer n is computed as follows:

        - Write n in binary to form string b.
        - Substract 1 from the number of bits written in the first step, and add that many zeros
          to the beginning of string b.

    For example, the binary representation of 13 is (1101)2, which takes four bits to write. 
    Hence, the Elias gamma code for 13 is 00001101.

    Let A be an array of integers. Write an encode function that returns a string representing
    the concatenation of the Elias gamma codes for A[0], A[1], ..., A[n - 1] in that order, and
    a decode function that takes a string s assumed to be generated by the encode function, and
    returns the array taht was passed to the encode function.
    ============================================================================================
"""
def elias_encode(A):
    n = len(A)

    if n == 0:
        return ""

    res = ""
    for num in A:
        b = bin(num)
        res += '0' * (len(b) - 2) + b[2:]   # since bin(13) = '0b1101'

    return res


def elias_decode(s):
    n = len(s)

    if n == 2:
        return [int(s[1])]

    res = []
    idx = 0
    while idx < n:
        start = idx
        while s[idx] == '0':
            idx += 1
        
        res.append(s[idx : 2 * idx - start])
        idx += (idx - start)

    res = [int(val, 2) for val in res]
    return res


print elias_decode(elias_encode([i for i in range(1, 100)]))

